using System;

interface IShape
{
    void PrintShapeType();
    void PrintArea();
    double a { get; set; }
}

interface IColoredShape : IShape
{
    string Color { get; set; }
    void PrintColor();
}

class Circle : IShape
{
    public double a { get; set; }

    public Circle(double radius)
    {
        a = radius;
    }

    public void PrintShapeType()
    {
        Console.WriteLine("Тип фiгури: Коло");
    }

    public void PrintArea()
    {
        double area = Math.PI * Math.Pow(a, 2);
        Console.WriteLine($"Площа: {area:F2}");
    }
}

class ColoredCircle : IColoredShape
{
    public double a { get; set; }
    public string Color { get; set; }

    public ColoredCircle(double radius, string color)
    {
        a = radius;
        Color = color;
    }

    public void PrintShapeType()
    {
        Console.WriteLine("Тип фiгури: Кольорове коло");
    }

    public void PrintArea()
    {
        double area = Math.PI * Math.Pow(a, 2);
        Console.WriteLine($"Площа: {area:F2}");
    }

    public void PrintColor()
    {
        Console.WriteLine($"Колiр: {Color}");
    }
}

class Program
{
    static void c (IShape shape)
    {
        shape.PrintShapeType();
        shape.PrintArea();

        if (shape is IColoredShape coloredShape)
        {
            coloredShape.PrintColor();
        }
    }

    static void Main()
    {
        IShape[] shapes =
        {
            new Circle(5),
            new Circle(7),
            new Circle(3),
            new ColoredCircle(4, "Червоний"),
            new ColoredCircle(6, "Блакитний"),
            new ColoredCircle(8, "Зелений")
        };

        foreach (var shape in shapes)
        {
            c(shape);
            Console.WriteLine();
        }
    }
}
