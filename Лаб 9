using System;

namespace ChordMethodExample
{
    public delegate double Function(double x);

    public class ChordMethodSolver
    {
        public static double FindRoot(Function f, double x0, double x1, double epsilon = 1e-6, int maxIterations = 100)
        {
            double fx0 = f(x0);
            double fx1 = f(x1);

            if (Math.Abs(fx0) < epsilon)
                return x0;
            if (Math.Abs(fx1) < epsilon)
                return x1;

            for (int i = 0; i < maxIterations; i++)
            {
                double x2 = x1 - fx1 * (x1 - x0) / (fx1 - fx0); 
                double fx2 = f(x2);

                if (Math.Abs(fx2) < epsilon)
                {
                    Console.WriteLine($"Знайдено корiнь: x = {x2} за {i + 1} iтерацiй.");
                    return x2;
                }

                x0 = x1;
                fx0 = fx1;
                x1 = x2;
                fx1 = fx2;
            }

            Console.WriteLine("Корiнь не знайдено за максимально допустиму кiлькiсть iтерацiй.");
            return double.NaN;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Function a = x => Math.Pow(x, 3) - x - 2;

            double x0 = 1.0;
            double x1 = 2.0;
            double root = ChordMethodSolver.FindRoot(a, x0, x1);

            if (!double.IsNaN(root))
                Console.WriteLine($"Корiнь рiвняння: {root:F6}");
        }
    }
}
